#-------------------------------------------------------------------------------
# File: eosd_env.example
# Authors: Ivan Arizanovic - ComTrade Solutions Engineering
#-------------------------------------------------------------------------------

# ************************************************************************
# * EOS - the CERN Disk Storage System                                   *
# * Copyright (C) 2017 CERN/Switzerland                                  *
# *                                                                      *
# * This program is free software: you can redistribute it and/or modify *
# * it under the terms of the GNU General Public License as published by *
# * the Free Software Foundation, either version 3 of the License, or    *
# * (at your option) any later version.                                  *
# *                                                                      *
# * This program is distributed in the hope that it will be useful,      *
# * but WITHOUT ANY WARRANTY; without even the implied warranty of       *
# * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the        *
# * GNU General Public License for more details.                         *
# *                                                                      *
# * You should have received a copy of the GNU General Public License    *
# * along with this program.  If not, see <http://www.gnu.org/licenses/>.*
# ************************************************************************

# Note: all these variables can be overwritten in the systemd file which is
# specific to the particular instance of eosd which you are spwning.

# Local mount directory for 'eosd'.
EOS_FUSE_MOUNTDIR=/eos/

# Optional remote directory visible unter the mount directory.
EOS_FUSE_REMOTEDIR=/eos/

# MGM host from where to do the inital mount.
EOS_FUSE_MGM_ALIAS=localhost

# FUSE debugging mode. (default off)
# EOS_FUSE_DEBUG=0

# FUSE low-level debugging mode. (default off)
# EOS_FUSE_LOWLEVEL_DEBUG=0

# FUSE logging level (default=4 is LOG_WARNING ... see /usr/include/sys/syslog.h
# LOG_XXX definitions). Effective only if EOS_FUSE_DEBUG=1.
# EOS_FUSE_LOGLEVEL=4

# FUSE staying in the foregroud, i.e no daemonize. (default 0)
# export EOS_FUSE_FOREGROUND=0

# Timeout of the initial ping to the instance to check if the file system should
# be mounted. Note: this is constrained by XRD_TIMEOUTRESOLUTION which by default
# is 15 sec.
# export EOS_FUSE_PING_TIMEOUT=15

# Parallel IO mode. (default on)
# EOS_FUSE_NOPIO=1

# Multi-threading in FUSE. (default on)
# EOS_FUSE_NO_MT=1

# FUSE read-ahead. (default off)
# EOS_FUSE_RDAHEAD=0

# FUSE read-ahead window. (default 128k) - uncommented since it's an argument
# option to the eosd command
EOS_FUSE_RDAHEAD_WINDOW=131072

# Using access for access permission check. (default on)
# EOS_FUSE_NOACCESS=1

# Kernel cache. (default on)
# EOS_FUSE_KERNELCACHE=1

# Synchronous mount with synchrnous fsync. (default off)
# EOS_FUSE_SYNC=0

# Bypass the buffer cache for write - avoids 4k chopping of IO. (default off)
# (this is not what people understand under O_DIRECT !!!!
# EOS_FUSE_DIRECTIO=0

# Write-back cache. (default on)
# EOS_FUSE_CACHE=1

# Write-back cache size. (default 300M)
# EOS_FUSE_CACHE_SIZE=314572800

# Write-back cache pagesize. (default 256k)
# EOS_FUSE_CACHE_PAGE_SIZE=262144

# Mount all files with 'x' bit to be able to run as an executable. (default off)
# EOS_FUSE_EXEC=0

# Enable protection against recursive deletion (rm -r command) starting from the
# root of the mount (if 1) or from any of its sub directories at a maximum depth
# (if >1). (default 1)
# EOS_FUSE_RMLVL_PROTECT=1

# Lazy-open of files for reading e.g. files are only opened on an FST if a read
# is done, by default this option is disabled because most ro files want
# to read and  there is a penalty in the two-step process. (default off)
# EOS_FUSE_LAZYOPENRO=0

# Lazy-open of files for RW. Applications get a visible performance boost by
# using this option and the latency in synchronous replication on the FSTs is
# completely hidden. (default on)
# EOS_FUSE_LAZYOPENRW=1

# Asynchronous open of files. Optimization of the lazy open hiding even more the
# latency. Used only when lazy-open is also enabled.
# export EOS_FUSE_ASYNC_OPEN=1

# Show hidden files from atomic/versioning and backup entries. (default off)
# EOS_FUSE_SHOW_SPECIAL_FILES=0

# Show extended attributes related to EOS itself - this are sys.* and emulated
# user.eos.* attributes for files. (default off)
# EOS_FUSE_SHOW_EOS_ATTRIBUTES=0

# Add (OR) an additional mode mask to the mode shown. (default disabled)
# EOS_FUSE_MODE_OVERLAY=000     (use 007 to show things are rwx for w)

# Enable inline-repair mode for updates of files with offline replicas.
# (default on)
# EOS_FUSE_INLINE_REPAIR=1

# Maximum inline-repair size for the previous flag. (default 256M)
# EOS_FUSE_MAX_INLINE_REPAIR_SIZE=268435456

# FUSE kernel cache time for directory entries (readdir cache). (default 10 sec)
# EOS_FUSE_ENTRY_CACHE_TIME=10

# FUSE kernel attribute cache time (stat cache). (default 10 sec)
# EOS_FUSE_ATTR_CACHE_TIME=10

# FUSE kernel negative stat cache time. (default 30 sec)
# EOS_FUSE_NEG_ENTRY_CACHE_TIME=30

# Set FUSE client creator CAP liftime. During this time window all reads done
# on the client where a file has been created can be served from a local file
# write-back cache. This improves significantly compilation. Remote changes are
# not visible inside files after creation during the specified time period.
# (default 30 sec)
# EOS_FUSE_CREATOR_CAP_LIFETIME=30

# FUSE client max. write-back cache size per file. This is required until
# kernel 3.15. where the write-back cache of the kernel can be used via a mount
# option. (default 64M)
# EOS_FUSE_FILE_WB_CACHE_SIZE=67108864

# FUSE maximum in-memory size for all write-back cache entries. Clean-interval
# is fixed at 10 seconds. (default 512 MB)
# export EOS_FUSE_MAX_WB_INMEMORY_SIZE=536870912

#-------------------------------------------------------------------------------
# These options are available only for XRootD 4.
#-------------------------------------------------------------------------------
# If KRB5 or X509 are enabled, specify the mapping from pid to strong authentication
# should be kept as symlinks under /var/run/eosd/credentials/pidXXXX. (default 0)
# EOS_FUSE_PIDMAP=0

# Kerberos authentication. File cache credential should be used. (default off)
# EOS_FUSE_USER_KRB5CC=0

# X509 GSI authentication. File user proxy should be used. (default off)
# EOS_FUSE_USER_GSIPROXY=0

# If both KRB5 and X509 are enabled, give priority to KRB5. (default off)
# EOS_FUSE_USER_KRB5FIRST=0

# If a connection fails using strong authentication, this is the timeout before
# actually retrying in the meantime, all access by the concerned user will be
# rejected (indicating authentication failure)
# !!WARNING!! If a low value is used on a batch machine, it could have an impact
# on the authentication burden on the server side. On interactive servers, it
# will be the longest time taken between refreshing the credentials and this
# taking effect on the fuse mount. (default is XRD_STREAMERRORWINDOW default value)
# EOS_FUSE_STREAMERRORWINDOW=1
# ------------------------------------------------------------------------------

# Enable the fuse local host time consistency model. This allows a more precise
# handling of mtime. Time reference is then the localhost time. This is very useful
# for applications which are massively relying on mtime : e.g. emacs, make, ...
# This only affects the shared fuse mount (default 0)
# !! WARNING!! It is strongly advised to synchronise the shared mount clock with
# the eos intance clock to use this.
# EOS_FUSE_LOCALTIMECONSISTENT=0

# An XRootD client bug makes that sometimes when a stat is issued it can come
# back with a null response. When this happens, it get retried a few times
# sleeping between the attepmts. This was fixed in XRootD 4.6.1.
# EOS_FUSE_XRDBUGNULLRESPONSE_RETRYCOUNT=3
# EOS_FUSE_XRDBUGNULLRESPONSE_RETRYSLEEPMS=1

# Path to the SSS keytab file for SSS connections. If KRB5 or GSI authentication
# is enabled, this is ignored.
# EOS_FUSE_SSS_KEYTAB=""

# Enable FUSE writeback cache. (requires fuse >= 3)
#EOSD=writeback_cache,

# FUSE big writes feature. (requires FUSE >=2.8) (default on)
EOS_FUSE_BIGWRITES=big_writes,

# Allow use of in memory krb5 tickets without any safety check.
EOS_FUSE_USER_UNSAFEKRB5=0

# Allow unix authentication (as nobody) as a fallback solution if strong
# authentication is configured but none is available.
EOS_FUSE_FALLBACKTONOBODY=0

# Enable XRootD fork handler, otherwise the eosd will hang.
XRD_RUNFORKHANDLER=1
