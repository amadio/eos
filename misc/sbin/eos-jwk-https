#!/usr/bin/env python3

# ----------------------------------------------------------------------
# File: eos-jwk-https
# Author: Andreas-Joachim Peters - CERN
# ----------------------------------------------------------------------

# ************************************************************************
# * EOS - the CERN Disk Storage System                                   *
# * Copyright (C) 2024 CERN/Switzerland                                  *
# *                                                                      *
# * This program is free software: you can redistribute it and/or modify *
# * it under the terms of the GNU General Public License as published by *
# * the Free Software Foundation, either version 3 of the License, or    *
# * (at your option) any later version.                                  *
# *                                                                      *
# * This program is distributed in the hope that it will be useful,      *
# * but WITHOUT ANY WARRANTY; without even the implied warranty of       *
# * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the        *
# * GNU General Public License for more details.                         *
# *                                                                      *
# * You should have received a copy of the GNU General Public License    *
# * along with this program.  If not, see <http://www.gnu.org/licenses/>.*
# ************************************************************************

from http.server import HTTPServer, BaseHTTPRequestHandler
import ssl
import socket
import os

class SimpleHTTPRequestHandler(BaseHTTPRequestHandler):
    def do_GET(self):
        wellknown = '{"jwks_uri":"https://';
        wellknown += socket.getfqdn()
        wellknown += ":4443"
        wellknown += '/jwk"}'
        if self.path == "/.well-known/openid-configuration":
           self.send_response(200)
           self.end_headers()
           self.wfile.write(bytes(wellknown,'UTF-8'))
        else:
           if self.path == "/jwk":
              self.send_response(200)
              self.end_headers()
              self.wfile.write(bytes(os.environ["EOS_JWK"],'UTF-8'))
           else:
              self.send_error(404, "File not found")
              return

httpd = HTTPServer(('', 4443), SimpleHTTPRequestHandler)

httpd.socket = ssl.wrap_socket (httpd.socket, 
        keyfile='/etc/grid-security/daemon/hostkey.pem', 
        certfile='/etc/grid-security/daemon/hostcert.pem', server_side=True)

httpd.serve_forever()
